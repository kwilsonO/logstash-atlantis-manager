input { 
   file {
	path => "/var/log/atlantis/manager/**"
	start_position => beginning
	type => "atlantis-manager"
   }


   #exec input to populate container data log
   exec {
        command => "bash /root/atlantis-analytics/logstash-atlantis-manager/scripts/api/usage-script.sh"
        interval => 30
        type => "exec-do-not-save"
   }

   file {
        path => "/root/atlantis-analytics/logstash-atlantis-supervisor/data/container/**/*"
        start_position => beginning
        type => "atlantis-supervisor-container-info"
   }

  file {
	path => "/root/atlantis-analytics/logstash-atlantis-manager/data/supervisors/*"
	start_position => beginning
	type => "atlantis-supervisor-usage-info"
  }
}

#TEMPLATE FIELDS
filter {
        mutate {
        add_field => { 'host-full-hostname' => 'INSTFULLHOST'  }
        add_field => { 'host-inst-id' => 'INSTID' }
        add_field => { 'host-inst-type' => 'INSTTYPE' }
        add_field => { 'host-local-hostname' => 'INSTLOCALHST' }
        add_field => { 'host-local-ipv4' => 'INSTLOCALIPV4' }
        add_field => { 'host-mac-addr' => 'INSTMACADDR' }
        add_field => { 'host-pub-hostname' => 'INSTPUBHOST' }
        add_field => { 'host-pub-ipv4' => 'INSTPUBIP' }
        add_field => { 'host-sec-groups' => 'INSTSECG' }
        }
}

filter {

    if [type] == "atlantis-manager" {
	grok {

		break_on_match =>  true
		#check if line is rpc cmd line
		match => { 'message'   => '(?<datetime>%{YEAR}/%{MONTHNUM}/%{MONTHDAY} %{TIME}) \[RPC\]\[%{WORD:command}\]\[%{DATA:cmdID}\](?<cmdmsg>.+)' } 
		match => { 'message'   => '(?<datetime>%{YEAR}/%{MONTHNUM}/%{MONTHDAY} %{TIME}) \[Route53\](?<r53msg>.+)' }
		match => { 'message' => 
			'%{IPV4:client_ip} - - \[%{GREEDYDATA:datetime}\]%{GREEDYDATA:req_info}'
		}
		match => { 'message'  =>  '%{DATESTAMP:datetime} \[(?<cmdtype>:.*)\](?<cmdmsg>.+)' }
	}

   }
}

filter {

  if [type] == "atlantis-supervisor-container-info" {
        grok {
                break_on_match => true
		match => { 'message' => '{ID:%{DATA:container-id},App:%{DATA:app-name},Sha:%{DATA:app-sha},Env:%{DATA:app-env},CPUShares:%{NUMBER:cpu-shares-used:int},Memory:%{NUMBER:mem-used:int},CPUPrice:%{NUMBER:cpu-price:int},MemPrice:%{NUMBER:mem-price:int}}' }

        }
  }
}

filter {

  if [type] == "atlantis-supervisor-usage-info" {
	grok {
		break_on_match => true
		match => { 'message' => '{Host:%{DATA:supervisor-hostname},UsedContainers:%{NUMBER:containers-used:int},UsedCPUShares:%{NUMBER:cpu-shares-used:int},UsedMemory:%{NUMBER:mem-used:int},UsedCPUPrice:%{NUMBER:used-cpu-price:int},UsedMemPrice:%{NUMBER:used-mem-price:int},TotalContainers:%{NUMBER:containers-total:int},TotalCPUShares:%{NUMBER:cpu-shares-total:int},TotalMemory:%{NUMBER:mem-total:int},TotalPrice:%{NUMBER:total-price:int}}'}

	}

  }


}

filter {

   if [type] == "atlantis-manager" {

	if [datetime] and [datetime] != "" {

		date {
		
			match => [ 'datetime', 'yyyy/MM/dd HH:mm:ss', 'dd/MMM/yyyy HH:mm:ss']
			target => '@timestamp' 
		}

	}
	
	if [command] and [command] != "" {
		
		if [command] == 'Login' {
			mutate { add_field => { 'linetype' => 'Login' } }
			grok { 
				match => {'cmdmsg' => ' %{WORD:position} \[((?:%{USERNAME:username})|)\]%{GREEDYDATA:cmdmsg}'}
				overwrite => [ 'cmdmsg' ] 
			}
		} else {
			mutate { add_field => { 'linetype' => 'RPC' } }
		}

	} else if [r53msg] and [r53msg] != "" {
		mutate { add_field => { 'linetype' => 'Route53' } }
		
	} else if [client_ip] and [client_ip] != "" {
			
		grok {
			match => { 'req_info' => 
' "%{WORD:http_method} %{URIPATHPARAM:http_uri} HTTP/%{NUMBER:http_version}" %{NUMBER:http_status:int} %{NUMBER:req_bytes:int} %{NUMBER:total_time:float}' 				}
		}

		mutate { 
			add_field => { 'linetype' => 'AccessLog' } 
			remove_field => [ 'req_info' ]
		}

	} else if [cmdtype] and [cmdtype] != "" {
		mutate { add_field => { 'linetype' => 'OtherCmd' } }
		
	} else if "_grokparsefailure" in [tags] {
		mutate { 
			add_field => { 'from-logtype' => 'manager' } 
			add_field => { 'linetype' => 'parsefailure' }
		}
	} else {
		mutate { 
			add_field => { 'linetype' => 'NoFormat' } 
			add_tag => [ 'unkown-format', 'The format is unknown for this line, update logstash-manager.conf' ]
		}
		
	}

   }

}


filter {

        if [type] == "atlantis-supervisor-container-info" {

                if [datetime] and [datetime] != "" {

                        date {

                                match => [ 'datetime', 'yyyy/MM/dd HH:mm:ss', 'dd/MMM/yyyy HH:mm:ss']
                                target => '@timestamp'
                        }

                }

	grok {
                match => [ "path", "/root/atlantis-analytics/logstash-atlantis-manager/data/container/%{GREEDYDATA:supervisor-hostname}/%{GREEDYDATA}" ]
        }

   }
}

output {

	if [type] == "atlantis-manager" {
                if [linetype] == 'RPC' {
                        elasticsearch {
                                index => 'manager-rpc-%{host}'
                                host => 'ec2-54-83-111-222.compute-1.amazonaws.com'
				cluster => 'elasticsearch-atlantis'
                }
                } else if [linetype] == 'Login' {
                        elasticsearch {
                                index => 'manager-login-%{host}'
                                host => 'ec2-54-83-111-222.compute-1.amazonaws.com'
				cluster => 'elasticsearch-atlantis'

                        }
                } else if [linetype] == 'Route53'  {
                        elasticsearch {
                                index => 'manager-route53-%{host}'
                                host => 'ec2-54-83-111-222.compute-1.amazonaws.com'
				cluster => 'elasticsearch-atlantis'
                        }
                } else if [linetype] == 'AccessLog' {
                        elasticsearch {
                                index => 'manager-access-%{host}'
                                host => 'ec2-54-83-111-222.compute-1.amazonaws.com'
				cluster => 'elasticsearch-atlantis'
                        }
                } else if [linetype] == 'OtherCmd' {
                        elasticsearch {
                                index => 'manager-othercmd-%{host}'
                                host => 'ec2-54-83-111-222.compute-1.amazonaws.com'
				cluster => 'elasticsearch-atlantis'
                        }
                } else if [linetype] == 'parsefailure' {
                        elasticsearch {
                                index => 'parse-failures-manager-%{host}'
                                host => 'ec2-54-83-111-222.compute-1.amazonaws.com'
				cluster => 'elasticsearch-atlantis'
                        }
                } else {
                        elasticsearch {
                                index => 'manager-other-%{host}'
                                host => 'ec2-54-83-111-222.compute-1.amazonaws.com'
				cluster => 'elasticsearch-atlantis'
                        }
                }
      } else if [type] == "atlantis-supervisor-container-info" {

		elasticsearch {
                                index => 'supervisor-container-info-%{host}'
                                host => 'ec2-54-83-111-222.compute-1.amazonaws.com'
				cluster => 'elasticsearch-atlantis'
               }

     } else if [type] == "atlantis-supervisor-usage-info" {

		elasticsearch {
                                index => 'supervisor-usage-info-%{host}'
                                host => 'ec2-54-83-111-222.compute-1.amazonaws.com'
				cluster => 'elasticsearch-atlantis'
               }


     }
}
